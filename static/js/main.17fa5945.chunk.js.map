{"version":3,"sources":["assets/mars.jpg","components/common/index.js","components/CurrentWeather/Date.jsx","components/CurrentWeather/Temperature.jsx","components/CurrentWeather/Wind.jsx","components/CurrentWeather/Info.jsx","components/CurrentWeather/Toggle.jsx","components/CurrentWeather/Options.jsx","components/CurrentWeather/index.jsx","components/PreviousWeather/PreviousDay.jsx","components/PreviousWeather/ButtonShow.jsx","components/PreviousWeather/index.jsx","style/GlobalStyle.js","style/Theme.js","createSols.js","App.js","useNasaApi.js","locales/index.js","locales/en.js","locales/ru.js","i18n.js","index.js"],"names":["module","exports","slideUpIn","keyframes","dualRing","LoadingSpinner","styled","div","SectionTitle","h2","fontSizes","theme","xl","fontWeights","bold","Reading","p","h1","colors","gray","ScreenReaders","DateContainer","mediaQueries","phone","Day","light","Date","solNum","date","t","useTranslation","TemperatureContainer","accentDark","tablet","Temperature","temperature","metricHigh","imperialHigh","metricLow","imperialLow","isMetric","high","low","WindContainer","Direction","Arrow","direction","Wind","wind","compassDegrees","imperialSpeed","metricSpeed","speed","InfoContainer","Info","Trans","i18nKey","href","ToggleContainer","StyledToggle","button","isToggled","Toggle","callback","onText","offText","onClick","type","OptionsContainer","Options","lang","onLangClick","onUnitClick","isRussian","Container","main","MainTitle","accent","CurrentWeather","currentSol","otherOptions","isShow","css","animationDelay","Sol","h3","dark","PreviousDay","onMoreInfoClick","sol","StylledButton","Button","htmlFor","Title","PreviousDaysContainer","PreviousWeather","sols","props","useState","setIsShow","ButtonShow","show","map","key","GlobalStyle","createGlobalStyle","marsImg","normal","semi","body","Theme","children","cToF","c","Math","round","mPerSToKmPerH","mPerS","mPerSToMilesPerH","formatDate","firstDate","Intl","DateTimeFormat","month","day","format","App","isLoading","setIsLoading","setSols","setCurrentSol","setIsMetric","setLang","i18n","data","setData","useEffect","fetch","then","response","json","useNasaApi","sol_keys","First_UTC","AT","mx","mn","HWS","av","WD","most_common","compass_degrees","createSols","length","changeLanguage","targetSol","filter","s","en","translation","mainTitle","kph","mph","info","p1","p2","previousWeatherTitle","showPreviousWeather","moreInfo","ru","use","initReactI18next","init","resources","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,kC,mgDCEpC,IAAMC,EAAYC,YAAH,KAWhBC,EAAWD,YAAH,KASDE,EAAiBC,IAAOC,IAAV,IAmBVH,GAIJI,EAAeF,IAAOG,GAAV,KACV,gBAAYC,EAAZ,EAAGC,MAASD,UAAZ,SAAyBE,GAC/BF,EAAUE,GAAKF,EAAUD,MACjB,qBAAGE,MAAkBE,YAAYC,QAIrCC,EAAUT,IAAOU,EAAV,KACL,qBAAGL,MAAkBD,UAAUO,MAEnC,qBAAGN,MAAkBO,OAAOC,QAG1BC,EAAgBd,IAAOU,EAAV,K,sSCrD1B,IAYMK,EAAgBf,IAAOC,IAAV,KAGR,qBAAGI,MAAkBW,aAAaC,SAKvCC,EAAMlB,IAAOU,EAAV,KACM,qBAAGL,MAAkBD,UAAUD,MAEnC,qBAAGE,MAAkBO,OAAOC,QACtB,qBAAGR,MAAkBE,YAAYY,SAGnCC,EA3BF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACdC,EAAMC,cAAND,EACR,OACE,kBAACR,EAAD,KACE,kBAACb,EAAD,CAAcI,IAAE,GACbiB,EAAE,OADL,IACcF,GAEd,kBAACH,EAAD,KAAMI,K,gWCPZ,IAqBMG,EAAuBzB,IAAOC,IAAV,KACC,qBAAGI,MAAkBO,OAAOc,cAM5C,qBAAGrB,MAAkBW,aAAaW,UAMlC,qBAAGtB,MAAkBW,aAAaC,SAK9BW,EAvCK,SAAC,GAGd,IAAD,IAFJC,YAAeC,EAEX,EAFWA,WAAYC,EAEvB,EAFuBA,aAAcC,EAErC,EAFqCA,UAAWC,EAEhD,EAFgDA,YACpDC,EACI,EADJA,SAEIC,EAAOD,EAAQ,UAAMJ,EAAN,mBAA0BC,EAA1B,SACfK,EAAMF,EAAQ,UAAMF,EAAN,mBAAyBC,EAAzB,SACZV,EAAMC,cAAND,EAEN,OACE,kBAACE,EAAD,KACE,kBAACvB,EAAD,KAAeqB,EAAE,gBACjB,kBAACd,EAAD,KACGc,EAAE,QADL,KACgBY,GAEhB,kBAAC1B,EAAD,KACGc,EAAE,OADL,KACea,K,k7BCfrB,IAsBMC,EAAgBrC,IAAOC,IAAV,KAOR,qBAAGI,MAAkBW,aAAaW,UAIlC,qBAAGtB,MAAkBW,aAAaC,SAKvCqB,EAAYtC,IAAOC,IAAV,KAWTsC,EAAQvC,IAAOC,IAAV,KACM,qBAAGuC,aAIJ,qBAAGnC,MAAkBO,OAAOc,cAO7Be,EA7DF,SAAC,GAGP,IAFLP,EAEI,EAFJA,SAEI,IADJQ,KAAQC,EACJ,EADIA,eAAgBC,EACpB,EADoBA,cAAeC,EACnC,EADmCA,YAEjCtB,EAAMC,cAAND,EACFuB,EAAQZ,EAAQ,UACbW,EADa,YACEtB,EAAE,QADJ,UAEbqB,EAFa,YAEIrB,EAAE,QACtBiB,EAAS,UAAMG,EAAN,OACb,OACE,kBAACN,EAAD,KACE,kBAACnC,EAAD,KAAeqB,EAAE,SACjB,kBAACd,EAAD,KAAUqC,GAEV,kBAACR,EAAD,KACE,kBAACxB,EAAD,KAAgB0B,GAChB,kBAACD,EAAD,CAAOC,UAAWA,O,mNCjB1B,IAkBMO,EAAgB/C,IAAOC,IAAV,KAGR,qBAAGI,MAAkBW,aAAaW,UAKlC,qBAAGtB,MAAkBW,aAAaC,SAK9B+B,EA/BF,WAAO,IACZzB,EAAMC,cAAND,EACN,OACE,kBAACwB,EAAD,KACE,2BAAIxB,EAAE,YACN,2BACE,kBAAC0B,EAAA,EAAD,CAAOC,QAAQ,WAAf,iDAEE,uBAAGC,KAAK,mDAAR,cAFF,wB,u3BCPR,IAgBMC,EAAkBpD,IAAOC,IAAV,KACV,qBAAGI,MAAkBO,OAAOO,SAyBjCkC,EAAerD,IAAOsD,OAAV,KAGI,qBAAGjD,MAAkBO,OAAOO,SAahC,qBAAGd,MAAkBO,OAAOO,SAI3B,qBAAGoC,UAA6B,MAAQ,UAK5CC,EAnEA,SAAC,GAAD,IAAGD,EAAH,EAAGA,UAAWE,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,QAAhC,OACb,kBAACP,EAAD,CAAiBQ,QAASH,GACxB,+BACGC,EACD,2BAAOG,KAAK,WAGd,kBAACR,EAAD,CAAcE,UAAWA,IAEzB,+BACGI,EACD,2BAAOE,KAAK,a,iNCVlB,IAoBMC,EAAmB9D,IAAOC,IAAV,KAMX,qBAAGI,MAAkBW,aAAaC,SAK9B8C,EA/BC,SAAC,GAAkD,IAAhD7B,EAA+C,EAA/CA,SAAU8B,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC1CC,EAAqB,OAATH,EAChB,OACE,kBAACF,EAAD,KACE,kBAAC,EAAD,CACEP,UAAWY,EACXV,SAAUQ,EACVP,OAAO,KACPC,QAAQ,OAEV,kBAAC,EAAD,CACEJ,UAAWrB,EACXuB,SAAUS,EACVR,OAAO,QACPC,QAAQ,Y,wgBCThB,IAkBMS,EAAYpE,IAAOqE,KAAV,KASJ,qBAAGhE,MAAkBW,aAAaC,SAMvCqD,GAAYtE,IAAOW,GAAV,KACA,qBAAGN,MAAkBD,UAAUO,MAC7B,qBAAGN,MAAkBE,YAAYY,SAEvC,qBAAGd,MAAkBO,OAAO2D,UAKxBC,GA1CQ,SAAC,GAIjB,IAAD,IAHJC,WAAcpD,EAGV,EAHUA,OAAQC,EAGlB,EAHkBA,KAAMO,EAGxB,EAHwBA,YAAaa,EAGrC,EAHqCA,KACzCR,EAEI,EAFJA,SACGwC,EACC,yCACInD,EAAMC,cAAND,EACR,OACE,kBAAC6C,EAAD,KACE,kBAACE,GAAD,KAAY/C,EAAE,cACd,kBAAC,EAAD,CAAMF,OAAQA,EAAQC,KAAMA,IAC5B,kBAAC,EAAD,CAAaO,YAAaA,EAAaK,SAAUA,IACjD,kBAAC,EAAD,CAAMQ,KAAMA,EAAMR,SAAUA,IAC5B,kBAAC,EAAD,MACA,kBAAC,EAAD,eAASA,SAAUA,GAAcwC,M,s2BCjBvC,IAgCMxD,GAAMlB,IAAOC,IAAV,MAEL,qBAAG0E,QAEHC,YADM,KAEShF,MAEE,gBAAGiF,EAAH,EAAGA,eAAH,gBAA2BA,EAA3B,SAKV,qBAAGxE,MAAkBW,aAAaW,UAMvCmD,GAAM9E,IAAO+E,GAAV,MAEH3D,GAAOpB,IAAOU,EAAV,MAEC,qBAAGL,MAAkBO,OAAOC,QAGjCe,GAAc5B,IAAOU,EAAV,MAEXsC,GAAOhD,IAAOsD,OAAV,MAIM,qBAAGjD,MAAkBO,OAAOoE,QACjC,qBAAG3E,MAAkBO,OAAOO,SAMrB,qBAAGd,MAAkBO,OAAOC,QAI/BoE,GA1EK,SAAC,GAUd,IATLN,EASI,EATJA,OACAE,EAQI,EARJA,eACAK,EAOI,EAPJA,gBAOI,IANJC,IACE7D,EAKE,EALFA,KACAD,EAIE,EAJFA,OAIE,IAHFQ,YAAeC,EAGb,EAHaA,WAAYC,EAGzB,EAHyBA,aAAcC,EAGvC,EAHuCA,UAAWC,EAGlD,EAHkDA,YAEtDC,EACI,EADJA,SAEIC,EAAOD,EAAQ,UAAMJ,EAAN,mBAA0BC,EAA1B,SACfK,EAAMF,EAAQ,UAAMF,EAAN,mBAAyBC,EAAzB,SACZV,EAAMC,cAAND,EAEN,OACE,kBAAC,GAAD,CAAKoD,OAAQA,EAAQE,eAAgBA,GACnC,kBAACC,GAAD,KACGvD,EAAE,OADL,IACcF,GAEd,kBAAC,GAAD,KAAOC,GACP,kBAAC,GAAD,KACGC,EAAE,QADL,KACgBY,GAEhB,kBAAC,GAAD,KACGZ,EAAE,OADL,KACea,GAEf,kBAAC,GAAD,CAAMwB,QAAS,kBAAMsB,EAAgB7D,KAAUE,EAAE,e,gnBC3BvD,IAUM6D,GAAgBpF,IAAOsD,OAAV,MAEH,qBAAGjD,MAAkBO,OAAOO,SAK7B,qBAAGd,MAAkBD,UAAUD,MAInC,qBAAGE,MAAkBO,OAAOC,QAM1B,qBAAGR,MAAkBO,OAAOoE,QAQnC,qBAAGL,QAAuB,iDAGrB,qBAAGtE,MAAkBW,aAAaW,UAK9B0D,GA3CA,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,QAASe,EAAa,EAAbA,OACnBpD,EAAMC,cAAND,EACN,OACE,kBAAC6D,GAAD,CAAeE,QAAQ,iBAAiB1B,QAASA,EAASe,OAAQA,GAChE,wCACA,kBAAC7D,EAAD,KAAgBS,EAAE,0B,wzBCHxB,IA0BM6C,GAAYpE,IAAOC,IAAV,MACC,qBAAGI,MAAkBO,OAAOO,SACjC,qBAAGd,MAAkBO,OAAOoE,QAIxB,qBAAGL,OAAuB,gBAAkB,qBAIhD,qBAAGtE,MAAkBW,aAAaW,UAE5B,qBAAGgD,OACL,gBAAkB,sBAI3BY,GAAQvF,IAAOG,GAAV,MACI,qBAAGE,MAAkBD,UAAUO,MAC7B,qBAAGN,MAAkBE,YAAYY,SAEvC,qBAAGd,MAAkBO,OAAO2D,UAInC,qBAAGI,QAEHC,YADM,KAEShF,MAKb4F,GAAwBxF,IAAOC,IAAV,MAIhB,qBAAGI,MAAkBW,aAAaW,UAK9B8D,GApES,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,0BACpBC,oBAAS,GADW,mBACzCjB,EADyC,KACjCkB,EADiC,KAE1ChB,EAAiB,GACftD,EAAMC,cAAND,EAEN,OACE,kBAAC,GAAD,CAAWoD,OAAQA,GACjB,kBAACmB,GAAD,CAAYnB,OAAQA,EAAQf,QAAS,kBAAMiC,GAAU,SAACE,GAAD,OAAWA,QAEhE,kBAACR,GAAD,CAAOZ,OAAQA,GAASpD,EAAE,yBAE1B,kBAACiE,GAAD,KACGE,EAAKM,KAAI,SAACb,GAAD,OACR,kBAAC,GAAD,eACEc,IAAKd,EAAI9D,OACT8D,IAAKA,EACLR,OAAQA,EACRE,eAAiBA,GAAkB,IAC/Bc,U,icCtBhB,IAgCeO,GAhCKC,YAAH,KAYSC,MAIf,qBAAG/F,MAAkBO,OAAOO,SAQ5B,qBAAGd,MAAkBO,OAAO2D,UAI5B,qBAAGlE,MAAkBO,OAAOc,cC5BjCrB,GAAQ,CACZE,YAAa,CACXY,MAAO,IACPkF,OAAQ,IACRC,KAAM,IACN9F,KAAM,KAERJ,UAAW,CACTO,GAAI,SACJR,GAAI,UACJoG,KAAM,OACNjG,GAAI,UAENM,OAAQ,CACNO,MAAO,OACPN,KAAM,UACNmE,KAAM,OACNT,OAAQ,UACR7C,WAAY,WAEdV,aAAc,CACZW,OAAQ,qCACRV,MAAO,uCAQIuF,GAJD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,kBAAC,IAAD,CAAepG,MAAOA,IAAQoG,IC9BzB,IAmBDC,GAAO,eAACC,EAAD,uDAAK,EAAL,OAAWC,KAAKC,MAAW,EAAJF,EAAS,EAAI,KAE3CG,GAAgB,eAACC,EAAD,uDAAS,EAAT,OAAeH,KAAKC,MAAc,IAARE,IAC1CC,GAAmB,eAACD,EAAD,uDAAS,EAAT,OAAeH,KAAKC,MAAc,IAARE,EAAc,MAE3DE,GAAa,SAACC,EAAWlD,GAC7B,IAAI1C,EAAO,IAAIF,KAAK8F,GACpB,OAAO,IAAIC,KAAKC,eAAepD,EAAM,CACnCqD,MAAO,OACPC,IAAK,YACJC,OAAOjG,ICuCGkG,GA3DH,WAAO,IAAD,EACgB5B,oBAAS,GADzB,mBACX6B,EADW,KACAC,EADA,OAEM9B,mBAAS,MAFf,mBAEXF,EAFW,KAELiC,EAFK,OAGkB/B,mBAAS,MAH3B,mBAGXnB,EAHW,KAGCmD,EAHD,OAIchC,oBAAS,GAJvB,mBAIX1D,EAJW,KAID2F,EAJC,OAKMjC,mBAAS,MALf,mBAKX5B,EALW,KAKL8D,EALK,KAMVC,EAASvG,cAATuG,KAEFC,ECZC,WAAuB,IAAD,EACLpC,mBAAS,MADJ,mBACtBoC,EADsB,KAChBC,EADgB,KAW3B,OARAC,qBAAU,WACRC,MANF,gFAOKC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLL,EAAQK,QAEX,IAEIN,EDCIO,GAEXL,qBAAU,WACJF,GACFL,EDrBoB,SAACK,EAAMhE,GAAP,OACxBgE,EAAKQ,SAASxC,KAAI,SAACC,GAAD,MAAU,CAC1B5E,OAAQ4E,EACR3E,KAAM2F,GAAWe,EAAK/B,GAAKwC,UAAWzE,GACtCnC,YAAa,CACXC,WAAY8E,KAAKC,SAASmB,EAAK/B,GAAKyC,IAAMV,EAAK/B,GAAKyC,GAAGC,IACvD3G,UAAW4E,KAAKC,SAASmB,EAAK/B,GAAKyC,IAAMV,EAAK/B,GAAKyC,GAAGE,IACtD7G,aAAc2E,MAAQsB,EAAK/B,GAAKyC,IAAMV,EAAK/B,GAAKyC,GAAGC,IACnD1G,YAAayE,MAAQsB,EAAK/B,GAAKyC,IAAMV,EAAK/B,GAAKyC,GAAGE,KAEpDlG,KAAM,CACJG,YAAaiE,MAAiBkB,EAAK/B,GAAK4C,KAAOb,EAAK/B,GAAK4C,IAAIC,IAC7DlG,cAAeoE,MAAoBgB,EAAK/B,GAAK4C,KAAOb,EAAK/B,GAAK4C,IAAIC,IAClEnG,eAAgBiE,KAAKC,SAChBmB,EAAK/B,GAAK8C,IAAMf,EAAK/B,GAAK8C,GAAGC,YAAYC,sBCOtCC,CAAWlB,EAAMhE,MAE1B,CAACgE,EAAMhE,IAEVkE,qBAAU,WACJxC,IACFkC,EAAclC,EAAKA,EAAKyD,OAAS,IACjCzB,GAAa,MAEd,CAAChC,IAEJwC,qBAAU,WACRH,EAAKqB,eAAepF,KACnB,CAACA,EAAM+D,IASV,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACCN,EACC,kBAAC1H,EAAD,MAEA,oCACE,kBAAC,GAAD,CACEmC,SAAUA,EACVgC,YAfU,kBAAM2D,GAAY,SAAC3F,GAAD,OAAeA,MAgB3C+B,YAjBU,kBAAM6D,GAAQ,SAAC9D,GAAD,MAAoB,OAATA,EAAgB,KAAO,SAkB1DA,KAAMA,EACNS,WAAYA,IAEd,kBAAC,GAAD,CACEvC,SAAUA,EACVgD,gBArBc,SAAC7D,GACvB,IAAIgI,EAAY3D,EAAK4D,QAAO,SAACC,GAAD,OAAOA,EAAElI,SAAWA,KAAQ,GACxDuG,EAAcyB,IAoBN3D,KAAMA,O,iBEzDH,IACb8D,GAAI,CACFC,YCLW,CACbC,UAAW,sCACXvE,IAAK,MACLtD,YAAa,cACbM,KAAM,OACNC,IAAK,MACLM,KAAM,OACNiH,IAAK,MACLC,IAAK,MACLC,KAAM,CACJC,GACE,uKACFC,GACE,sFAEJC,qBAAsB,kBACtBC,oBAAqB,wBACrBC,SAAU,cDVVC,GAAI,CACFV,YERW,CACbC,UAAW,mKACXvE,IAAK,qBACLtD,YAAa,qEACbM,KAAM,2BACNC,IAAK,qBACLM,KAAM,iCACNiH,IAAK,sBACLC,IAAK,sBACLC,KAAM,CACJC,GACE,87BACFC,GACE,wTAEJC,qBAAsB,0FACtBC,oBAAqB,2JACrBC,SAAU,4DCbZnC,KACGqC,IAAIC,MACJC,KAAK,CACJC,aACAC,IAAK,KACLC,YAAa,KAEbC,cAAe,CACbC,aAAa,KAIJ5C,GAAf,ECXA6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.17fa5945.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars.afe4aa06.jpg\";","import styled, { keyframes } from \"styled-components\";\n\nexport const slideUpIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst dualRing = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 80px;\n  height: 80px;\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.6;\n\n  &::after {\n    content: \" \";\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border-radius: 50%;\n    border: 6px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: ${dualRing} 1.2s linear infinite;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: ${({ theme: { fontSizes }, xl }) =>\n    xl ? fontSizes.xl : fontSizes.h2};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  margin: 0;\n`;\n\nexport const Reading = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.h1};\n  margin: 0;\n  color: ${({ theme }) => theme.colors.gray};\n`;\n\nexport const ScreenReaders = styled.p`\n  &:not(:focus):not(:active) {\n    clip: rect(0 0 0 0);\n    -webkit-clip-path: inset(50%);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SectionTitle } from \"../common\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Date = ({ solNum, date }) => {\n  const { t } = useTranslation();\n  return (\n    <DateContainer>\n      <SectionTitle xl>\n        {t(\"sol\")} {solNum}\n      </SectionTitle>\n      <Day>{date}</Day>\n    </DateContainer>\n  );\n};\n\nconst DateContainer = styled.div`\n  grid-column: 1 / 2;\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nconst Day = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  margin: 0;\n  color: ${({ theme }) => theme.colors.gray};\n  font-weight: ${({ theme }) => theme.fontWeights.light};\n`;\n\nexport default Date;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SectionTitle, Reading } from \"../common\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Temperature = ({\n  temperature: { metricHigh, imperialHigh, metricLow, imperialLow },\n  isMetric,\n}) => {\n  let high = isMetric ? `${metricHigh}°C` : `${imperialHigh}°F`;\n  let low = isMetric ? `${metricLow}°C` : `${imperialLow}°F`;\n  let { t } = useTranslation();\n\n  return (\n    <TemperatureContainer>\n      <SectionTitle>{t(\"temperature\")}</SectionTitle>\n      <Reading>\n        {t(\"high\")}: {high}\n      </Reading>\n      <Reading>\n        {t(\"low\")}: {low}\n      </Reading>\n    </TemperatureContainer>\n  );\n};\n\nconst TemperatureContainer = styled.div`\n  --border: solid 0.25em ${({ theme }) => theme.colors.accentDark};\n  grid-column: 2 / 3;\n  border-left: var(--border);\n  border-right: var(--border);\n  padding: 0 2em;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    grid-column: 2 / 4;\n    border-right: none;\n    word-break: break-all;\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nexport default Temperature;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SectionTitle, Reading, ScreenReaders } from \"../common\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Wind = ({\n  isMetric,\n  wind: { compassDegrees, imperialSpeed, metricSpeed },\n}) => {\n  let { t } = useTranslation();\n  let speed = isMetric\n    ? `${metricSpeed} ${t(\"kph\")}`\n    : `${imperialSpeed} ${t(\"mph\")}`;\n  let direction = `${compassDegrees}deg`;\n  return (\n    <WindContainer>\n      <SectionTitle>{t(\"wind\")}</SectionTitle>\n      <Reading>{speed}</Reading>\n\n      <Direction>\n        <ScreenReaders>{direction}</ScreenReaders>\n        <Arrow direction={direction} />\n      </Direction>\n    </WindContainer>\n  );\n};\n\nconst WindContainer = styled.div`\n  grid-column: 3 / 4;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: min-content 1fr;\n  align-self: start;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    grid-column: 1 / 3;\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nconst Direction = styled.div`\n  --size: 6rem;\n  width: var(--size);\n  height: var(--size);\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: grid;\n  place-items: center;\n  grid-row: 1 / span 2;\n`;\n\nconst Arrow = styled.div`\n  --direction: ${({ direction }) => direction};\n  --size: 1rem;\n  height: calc(var(--size) * 3);\n  width: var(--size);\n  background: ${({ theme }) => theme.colors.accentDark};\n  clip-path: polygon(50% 0, 0% 100%, 100% 100%);\n  transform: translateY(-50%) rotate(var(--direction));\n  transform-origin: bottom center;\n  transition: transform 500ms ease;\n`;\n\nexport default Wind;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst Info = () => {\n  let { t } = useTranslation();\n  return (\n    <InfoContainer>\n      <p>{t(\"info.p1\")}</p>\n      <p>\n        <Trans i18nKey=\"info.p2\">\n          This is only a part of InSight’s mission.\n          <a href=\"https://mars.nasa.gov/insight/mission/overview/\">\n            Click here\n          </a>\n          to find out more.\n        </Trans>\n      </p>\n    </InfoContainer>\n  );\n};\n\nconst InfoContainer = styled.div`\n  grid-column: 1 / 3;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    grid-column: 1 / 4;\n    grid-row: 2;\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    display: none;\n  }\n`;\n\nexport default Info;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Toggle = ({ isToggled, callback, onText, offText }) => (\n  <ToggleContainer onClick={callback}>\n    <label>\n      {onText}\n      <input type=\"radio\" />\n    </label>\n\n    <StyledToggle isToggled={isToggled} />\n\n    <label>\n      {offText}\n      <input type=\"radio\" />\n    </label>\n  </ToggleContainer>\n);\n\nconst ToggleContainer = styled.div`\n  color: ${({ theme }) => theme.colors.light};\n  margin-left: 1rem;\n  display: flex;\n  opacity: 0.7;\n  transition: opacity 275ms linear;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  & label {\n    cursor: pointer;\n  }\n\n  & input {\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n`;\n\nconst StyledToggle = styled.button`\n  cursor: pointer;\n  width: 4em;\n  border: 2px solid ${({ theme }) => theme.colors.light};\n  background: transparent;\n  padding: 0;\n  border-radius: 100vmax;\n  margin: 0 1em;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::after {\n    content: \"\";\n    display: block;\n    background: ${({ theme }) => theme.colors.light};\n    border-radius: 50%;\n    height: 1rem;\n    margin: 3px;\n    margin-left: ${({ isToggled }) => (isToggled ? \"3px\" : \"auto\")};\n    width: 1rem;\n  }\n`;\n\nexport default Toggle;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Options = ({ isMetric, lang, onLangClick, onUnitClick }) => {\n  let isRussian = lang === \"ru\";\n  return (\n    <OptionsContainer>\n      <Toggle\n        isToggled={isRussian}\n        callback={onLangClick}\n        onText=\"RU\"\n        offText=\"EN\"\n      />\n      <Toggle\n        isToggled={isMetric}\n        callback={onUnitClick}\n        onText=\"°C\"\n        offText=\"°F\"\n      />\n    </OptionsContainer>\n  );\n};\n\nconst OptionsContainer = styled.div`\n  grid-column: 3 / 4;\n  display: flex;\n  align-items: flex-end;\n  flex-flow: row-reverse;\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nexport default Options;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport Date from \"./Date\";\nimport Temperature from \"./Temperature\";\nimport Wind from \"./Wind\";\nimport Info from \"./Info\";\nimport Options from \"./Options\";\n\nconst CurrentWeather = ({\n  currentSol: { solNum, date, temperature, wind },\n  isMetric,\n  ...otherOptions\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Container>\n      <MainTitle>{t(\"mainTitle\")}</MainTitle>\n      <Date solNum={solNum} date={date} />\n      <Temperature temperature={temperature} isMetric={isMetric} />\n      <Wind wind={wind} isMetric={isMetric} />\n      <Info />\n      <Options isMetric={isMetric} {...otherOptions} />\n    </Container>\n  );\n};\n\nconst Container = styled.main`\n  background: rgba(0, 0, 0, 0.7);\n  padding: 2em;\n  max-width: 1100px;\n  margin: 4em auto;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2em;\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    margin: 0;\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst MainTitle = styled.h1`\n  font-size: ${({ theme }) => theme.fontSizes.h1};\n  font-weight: ${({ theme }) => theme.fontWeights.light};\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.accent};\n  letter-spacing: 2px;\n  grid-column: 1 / -1;\n`;\n\nexport default CurrentWeather;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { slideUpIn } from \"../common\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PreviousDay = ({\n  isShow,\n  animationDelay,\n  onMoreInfoClick,\n  sol: {\n    date,\n    solNum,\n    temperature: { metricHigh, imperialHigh, metricLow, imperialLow },\n  },\n  isMetric,\n}) => {\n  let high = isMetric ? `${metricHigh}°C` : `${imperialHigh}°F`;\n  let low = isMetric ? `${metricLow}°C` : `${imperialLow}°F`;\n  let { t } = useTranslation();\n\n  return (\n    <Day isShow={isShow} animationDelay={animationDelay}>\n      <Sol>\n        {t(\"sol\")} {solNum}\n      </Sol>\n      <Date>{date}</Date>\n      <Temperature>\n        {t(\"high\")}: {high}\n      </Temperature>\n      <Temperature>\n        {t(\"low\")}: {low}\n      </Temperature>\n      <Info onClick={() => onMoreInfoClick(solNum)}>{t(\"moreInfo\")}</Info>\n    </Day>\n  );\n};\n\nconst Day = styled.div`\n  opacity: 0;\n  ${({ isShow }) =>\n    isShow &&\n    css`\n      animation: ${slideUpIn} 750ms forwards;\n    `};\n  animation-delay: ${({ animationDelay }) => `${animationDelay}ms`};\n\n  & > * {\n    margin: 0;\n  }\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    width: 33%;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Sol = styled.h3``;\n\nconst Date = styled.p`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.gray};\n`;\n\nconst Temperature = styled.p``;\n\nconst Info = styled.button`\n  cursor: pointer;\n  border: 0;\n  border-radius: 100vmax;\n  background: ${({ theme }) => theme.colors.dark};\n  color: ${({ theme }) => theme.colors.light};\n  text-transform: uppercase;\n  padding: 0.3em 1em;\n  margin-top: 1em;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.gray};\n  }\n`;\n\nexport default PreviousDay;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ScreenReaders } from \"../common\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Button = ({ onClick, isShow }) => {\n  let { t } = useTranslation();\n  return (\n    <StylledButton htmlFor=\"weather-toggle\" onClick={onClick} isShow={isShow}>\n      <span>&#8593;</span>\n      <ScreenReaders>{t(\"showPreviousWeather\")}</ScreenReaders>\n    </StylledButton>\n  );\n};\n\nconst StylledButton = styled.button`\n  position: absolute;\n  background: ${({ theme }) => theme.colors.light};\n  left: 50%;\n  width: 10rem;\n  transform: translate(-50%, calc(-100% - 3rem));\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  line-height: 1;\n  clip-path: polygon(50% 0, 0 100%, 100% 100%);\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.gray};\n  border: 0;\n  font-family: inherit;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.dark};\n  }\n\n  & span {\n    display: block;\n    transform: rotate(0);\n    transition: transform 300ms ease;\n\n    ${({ isShow }) => isShow && \"transform: rotate(180deg) translateY(-6px);\"}\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    transform: translate(-50%, calc(-100% - 2rem));\n  }\n`;\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { slideUpIn } from \"../common\";\nimport PreviousDay from \"./PreviousDay\";\nimport ButtonShow from \"./ButtonShow\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PreviousWeather = ({ sols, ...props }) => {\n  let [isShow, setIsShow] = useState(false);\n  let animationDelay = 75;\n  let { t } = useTranslation();\n\n  return (\n    <Container isShow={isShow}>\n      <ButtonShow isShow={isShow} onClick={() => setIsShow((show) => !show)} />\n\n      <Title isShow={isShow}>{t(\"previousWeatherTitle\")}</Title>\n\n      <PreviousDaysContainer>\n        {sols.map((sol) => (\n          <PreviousDay\n            key={sol.solNum}\n            sol={sol}\n            isShow={isShow}\n            animationDelay={(animationDelay += 25)}\n            {...props}\n          />\n        ))}\n      </PreviousDaysContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.colors.light};\n  color: ${({ theme }) => theme.colors.dark};\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  transform: ${({ isShow }) => (isShow ? \"translateY(0)\" : \"translateY(60%)\")};\n  transition: transform 350ms ease;\n  padding: 3rem;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    padding: 2rem;\n    transform: ${({ isShow }) =>\n      isShow ? \"translateY(0)\" : \"translateY(100%)\"};\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: ${({ theme }) => theme.fontSizes.h1};\n  font-weight: ${({ theme }) => theme.fontWeights.light};\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.accent};\n  letter-spacing: 2px;\n  text-align: center;\n\n  ${({ isShow }) =>\n    isShow &&\n    css`\n      animation: ${slideUpIn} 750ms forwards;\n      text-align: left;\n    `}\n`;\n\nconst PreviousDaysContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    flex-flow: wrap;\n  }\n`;\n\nexport default PreviousWeather;\n","import { createGlobalStyle } from \"styled-components\";\nimport marsImg from \"../assets/mars.jpg\";\n\nconst GlobalStyle = createGlobalStyle`\n*,\n*::before,\n*::after {\n\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.6;\n  background-image: url(${marsImg});\n  background-size: cover;\n  height: 100vh;\n  overflow: hidden;\n  color: ${({ theme }) => theme.colors.light};\n}\n\nh1, h2, h3 {\n  line-height: 1;\n}\n\na {\n  color: ${({ theme }) => theme.colors.accent};\n}\n\na:hover {\n  color: ${({ theme }) => theme.colors.accentDark};\n}\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  fontWeights: {\n    light: 300,\n    normal: 400,\n    semi: 500,\n    bold: 700,\n  },\n  fontSizes: {\n    h1: \"1.5rem\",\n    h2: \"2.25rem\",\n    body: \"1rem\",\n    xl: \"4.5rem\",\n  },\n  colors: {\n    light: \"#fff\",\n    gray: \"#989898\",\n    dark: \"#444\",\n    accent: \"#D06D6D\",\n    accentDark: \"#613131\",\n  },\n  mediaQueries: {\n    tablet: \"only screen and (max-width: 768px)\",\n    phone: \"only screen and (max-width: 425px)\",\n  },\n};\n\nconst Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default Theme;\n","export const createSols = (data, lang) =>\n  data.sol_keys.map((key) => ({\n    solNum: key,\n    date: formatDate(data[key].First_UTC, lang),\n    temperature: {\n      metricHigh: Math.round(+!!data[key].AT && data[key].AT.mx),\n      metricLow: Math.round(+!!data[key].AT && data[key].AT.mn),\n      imperialHigh: cToF(+!!data[key].AT && data[key].AT.mx),\n      imperialLow: cToF(+!!data[key].AT && data[key].AT.mn),\n    },\n    wind: {\n      metricSpeed: mPerSToKmPerH(+!!data[key].HWS && data[key].HWS.av),\n      imperialSpeed: mPerSToMilesPerH(+!!data[key].HWS && data[key].HWS.av),\n      compassDegrees: Math.round(\n        +!!data[key].WD && data[key].WD.most_common.compass_degrees\n      ),\n    },\n  }));\n\nconst cToF = (c = 0) => Math.round((c * 9) / 5 + 32);\n\nconst mPerSToKmPerH = (mPerS = 0) => Math.round(mPerS * 3.6);\nconst mPerSToMilesPerH = (mPerS = 0) => Math.round(mPerS * 3.6 * 0.61);\n\nconst formatDate = (firstDate, lang) => {\n  let date = new Date(firstDate);\n  return new Intl.DateTimeFormat(lang, {\n    month: \"long\",\n    day: \"numeric\",\n  }).format(date);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { LoadingSpinner } from \"./components/common\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport PreviousWeather from \"./components/PreviousWeather\";\nimport { Theme, GlobalStyle } from \"./style\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNasaApi } from \"./useNasaApi\";\nimport { createSols } from \"./createSols\";\n\nconst App = () => {\n  let [isLoading, setIsLoading] = useState(true);\n  let [sols, setSols] = useState(null);\n  let [currentSol, setCurrentSol] = useState(null);\n  let [isMetric, setIsMetric] = useState(true);\n  let [lang, setLang] = useState(\"en\");\n  let { i18n } = useTranslation();\n\n  let data = useNasaApi();\n\n  useEffect(() => {\n    if (data) {\n      setSols(createSols(data, lang));\n    }\n  }, [data, lang]);\n\n  useEffect(() => {\n    if (sols) {\n      setCurrentSol(sols[sols.length - 1]);\n      setIsLoading(false);\n    }\n  }, [sols]);\n\n  useEffect(() => {\n    i18n.changeLanguage(lang);\n  }, [lang, i18n]);\n\n  const onLangClick = () => setLang((lang) => (lang === \"en\" ? \"ru\" : \"en\"));\n  const onUnitClick = () => setIsMetric((isMetric) => !isMetric);\n  const onMoreInfoClick = (solNum) => {\n    let targetSol = sols.filter((s) => s.solNum === solNum)[0];\n    setCurrentSol(targetSol);\n  };\n\n  return (\n    <Theme>\n      <GlobalStyle />\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <CurrentWeather\n            isMetric={isMetric}\n            onUnitClick={onUnitClick}\n            onLangClick={onLangClick}\n            lang={lang}\n            currentSol={currentSol}\n          />\n          <PreviousWeather\n            isMetric={isMetric}\n            onMoreInfoClick={onMoreInfoClick}\n            sols={sols}\n          />\n        </>\n      )}\n    </Theme>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nconst URL =\n  \"https://api.nasa.gov/insight_weather/?api_key=DEMO_KEY&feedtype=json&ver=1.0\";\n\nexport function useNasaApi() {\n  let [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(URL)\n      .then((response) => response.json())\n      .then((json) => {\n        setData(json);\n      });\n  }, []);\n\n  return data;\n}\n","import ru from \"./ru\";\nimport en from \"./en\";\n\nexport default {\n  en: {\n    translation: en,\n  },\n  ru: {\n    translation: ru,\n  },\n};\n","export default {\n  mainTitle: \"Latest weather at Elysium Plantitia\",\n  sol: \"Sol\",\n  temperature: \"Temperature\",\n  high: \"High\",\n  low: \"Low\",\n  wind: \"Wind\",\n  kph: \"kph\",\n  mph: \"mph\",\n  info: {\n    p1:\n      \"InSight is taking daily weather measurements (temperature, wind, pressure) on the surface of Mars at Elysium Planitia, a flat, smooth plain near Mars’ equator.\",\n    p2:\n      \"This is only a part of InSight’s mission. <1>Click here</1> to find out more.\",\n  },\n  previousWeatherTitle: \"Previous 7 days\",\n  showPreviousWeather: \"Show previous weather\",\n  moreInfo: \"more info\",\n};\n","export default {\n  mainTitle: \"Погода в районе Равнины Элизий\",\n  sol: \"Сол\",\n  temperature: \"Температура\",\n  high: \"Макс\",\n  low: \"Мин\",\n  wind: \"Ветер\",\n  kph: \"км/ч\",\n  mph: \"мл/ч\",\n  info: {\n    p1:\n      \"Зонд InSight ежедневно измеряет погодные условия (температуру, скорость ветра, давление) на поверхности Марса в районе Равнины Элизий - плоской, гладкой равнины вблизи марсианского экватора.\",\n    p2:\n      \"Это всего лишь часть миссии InSight. <1>Жми сюда</1> чтобы узнать больше.\",\n  },\n  previousWeatherTitle: \"Предыдущие 7 дней\",\n  showPreviousWeather: \"Показать предыдущий прогноз\",\n  moreInfo: \"подробнее\",\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport resources from \"./locales\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"en\",\n    fallbackLng: \"en\",\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}