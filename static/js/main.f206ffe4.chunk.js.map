{"version":3,"sources":["assets/mars.jpg","components/common/index.js","components/CurrentWeather/Date.jsx","components/CurrentWeather/Temperature.jsx","components/CurrentWeather/Wind.jsx","components/CurrentWeather/Info.jsx","components/CurrentWeather/Unit.jsx","components/CurrentWeather/index.jsx","components/PreviousWeather/PreviousDay.jsx","components/PreviousWeather/ButtonShow.jsx","components/PreviousWeather/index.jsx","style/GlobalStyle.js","style/Theme.js","createSols.js","useNasaApi.js","App.js","index.js"],"names":["module","exports","slideUpIn","keyframes","dualRing","LoadingSpinner","styled","div","SectionTitle","h2","fontSizes","theme","xl","fontWeights","bold","Reading","p","h1","colors","gray","ScreenReaders","DateContainer","mediaQueries","phone","Day","light","Date","solNum","date","TemperatureContainer","accentDark","tablet","Temperature","temperature","metricHigh","imperialHigh","metricLow","imperialLow","isMetric","high","low","WindContainer","Direction","Arrow","direction","Wind","wind","compassDegrees","imperialSpeed","metricSpeed","speed","InfoContainer","Info","href","UnitContainer","UnitToggle","button","Unit","onUnitClick","onClick","htmlFor","type","Container","main","MainTitle","accent","CurrentWeather","currentSol","isShow","css","animationDelay","Sol","h3","dark","PreviousDay","onMoreInfoClick","sol","StylledButton","Button","Title","PreviousDaysContainer","PreviousWeather","sols","props","useState","setIsShow","ButtonShow","show","map","key","GlobalStyle","createGlobalStyle","marsImg","normal","semi","body","Theme","children","cToF","c","Math","round","mPerSToKmPerH","mPerS","mPerSToMilesPerH","formatDate","firstDate","Intl","DateTimeFormat","month","day","format","useNasaApi","setCurrentSol","setSols","isLoading","setIsLoading","useEffect","fetch","then","response","json","data","_sols","sol_keys","First_UTC","AT","mx","mn","HWS","av","WD","most_common","compass_degrees","createSols","length","App","setIsMetric","targetSol","filter","s","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f206ffe4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars.afe4aa06.jpg\";","import styled, { keyframes } from \"styled-components\";\n\nexport const slideUpIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst dualRing = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 80px;\n  height: 80px;\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.6;\n\n  &::after {\n    content: \" \";\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border-radius: 50%;\n    border: 6px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: ${dualRing} 1.2s linear infinite;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: ${({ theme: { fontSizes }, xl }) =>\n    xl ? fontSizes.xl : fontSizes.h2};\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  margin: 0;\n`;\n\nexport const Reading = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.h1};\n  margin: 0;\n  color: ${({ theme }) => theme.colors.gray};\n`;\n\nexport const ScreenReaders = styled.p`\n  &:not(:focus):not(:active) {\n    clip: rect(0 0 0 0);\n    -webkit-clip-path: inset(50%);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SectionTitle } from \"../common\";\n\nconst Date = ({ solNum, date }) => (\n  <DateContainer>\n    <SectionTitle xl>Sol {solNum}</SectionTitle>\n    <Day>{date}</Day>\n  </DateContainer>\n);\n\nconst DateContainer = styled.div`\n  grid-column: 1 / 2;\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nconst Day = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  margin: 0;\n  color: ${({ theme }) => theme.colors.gray};\n  font-weight: ${({ theme }) => theme.fontWeights.light};\n`;\n\nexport default Date;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SectionTitle, Reading } from \"../common\";\n\nconst Temperature = ({\n  temperature: { metricHigh, imperialHigh, metricLow, imperialLow },\n  isMetric,\n}) => {\n  let high = isMetric ? `${metricHigh}°C` : `${imperialHigh}°F`;\n  let low = isMetric ? `${metricLow}°C` : `${imperialLow}°F`;\n  return (\n    <TemperatureContainer>\n      <SectionTitle>Temperature</SectionTitle>\n      <Reading>High: {high}</Reading>\n      <Reading>Low: {low}</Reading>\n    </TemperatureContainer>\n  );\n};\n\nconst TemperatureContainer = styled.div`\n  --border: solid 0.25em ${({ theme }) => theme.colors.accentDark};\n  grid-column: 2 / 3;\n  border-left: var(--border);\n  border-right: var(--border);\n  padding: 0 2em;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    grid-column: 2 / 4;\n    border-right: none;\n    word-break: break-all;\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nexport default Temperature;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SectionTitle, Reading, ScreenReaders } from \"../common\";\n\nconst Wind = ({\n  isMetric,\n  wind: { compassDegrees, imperialSpeed, metricSpeed },\n}) => {\n  let speed = isMetric ? `${metricSpeed} kph` : `${imperialSpeed} mph`;\n  let direction = `${compassDegrees}deg`;\n  return (\n    <WindContainer>\n      <SectionTitle>Wind</SectionTitle>\n      <Reading>{speed}</Reading>\n\n      <Direction>\n        <ScreenReaders>{direction}</ScreenReaders>\n        <Arrow direction={direction} />\n      </Direction>\n    </WindContainer>\n  );\n};\n\nconst WindContainer = styled.div`\n  grid-column: 3 / 4;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: min-content 1fr;\n  align-self: start;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    grid-column: 1 / 3;\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nconst Direction = styled.div`\n  --size: 6rem;\n  width: var(--size);\n  height: var(--size);\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: grid;\n  place-items: center;\n  grid-row: 1 / span 2;\n`;\n\nconst Arrow = styled.div`\n  --direction: ${({ direction }) => direction};\n  --size: 1rem;\n  height: calc(var(--size) * 3);\n  width: var(--size);\n  background: ${({ theme }) => theme.colors.accentDark};\n  clip-path: polygon(50% 0, 0% 100%, 100% 100%);\n  transform: translateY(-50%) rotate(var(--direction));\n  transform-origin: bottom center;\n  transition: transform 500ms ease;\n`;\n\nexport default Wind;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Info = () => (\n  <InfoContainer>\n    <p>\n      InSight is taking daily weather measurements (temperature, wind, pressure)\n      on the surface of Mars at Elysium Planitia, a flat, smooth plain near\n      Mars’ equator.\n    </p>\n    <p>\n      This is only a part of InSight’s mission.{\" \"}\n      <a href=\"https://mars.nasa.gov/insight/mission/overview/\">Click here</a>{\" \"}\n      to find out more.\n    </p>\n  </InfoContainer>\n);\n\nconst InfoContainer = styled.div`\n  grid-column: 1 / 3;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    grid-column: 1 / 4;\n    grid-row: 2;\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    display: none;\n  }\n`;\n\nexport default Info;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Unit = ({ isMetric, onUnitClick }) => (\n  <UnitContainer onClick={onUnitClick}>\n    <label htmlFor=\"cel\">°C</label>\n    <input type=\"radio\" />\n\n    <UnitToggle isMetric={isMetric} />\n\n    <label htmlFor=\"fah\">°F</label>\n    <input type=\"radio\" />\n  </UnitContainer>\n);\n\nconst UnitContainer = styled.div`\n  grid-column: 3 / 4;\n  place-self: end;\n  color: ${({ theme }) => theme.colors.light};\n  display: flex;\n  opacity: 0.7;\n  transition: opacity 275ms linear;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  & label {\n    cursor: pointer;\n  }\n\n  & input {\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    grid-column: 1;\n  }\n`;\n\nconst UnitToggle = styled.button`\n  cursor: pointer;\n  width: 4em;\n  border: 2px solid ${({ theme }) => theme.colors.light};\n  background: transparent;\n  padding: 0;\n  border-radius: 100vmax;\n  margin: 0 1em;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::after {\n    content: \"\";\n    display: block;\n    background: ${({ theme }) => theme.colors.light};\n    border-radius: 50%;\n    height: 1rem;\n    margin: 3px;\n    margin-left: ${({ isMetric }) => (isMetric ? \"3px\" : \"auto\")};\n    width: 1rem;\n  }\n`;\n\nexport default Unit;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Date from \"./Date\";\nimport Temperature from \"./Temperature\";\nimport Wind from \"./Wind\";\nimport Info from \"./Info\";\nimport Unit from \"./Unit\";\n\nconst CurrentWeather = ({\n  isMetric,\n  onUnitClick,\n  currentSol: { solNum, date, temperature, wind },\n}) => (\n  <Container>\n    <MainTitle>Latest weather at Elysium Plantitia</MainTitle>\n    <Date solNum={solNum} date={date} />\n    <Temperature temperature={temperature} isMetric={isMetric} />\n    <Wind wind={wind} isMetric={isMetric} />\n    <Info />\n    <Unit isMetric={isMetric} onUnitClick={onUnitClick} />\n  </Container>\n);\n\nconst Container = styled.main`\n  background: rgba(0, 0, 0, 0.7);\n  padding: 2em;\n  max-width: 1000px;\n  margin: 4em auto;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2em;\n\n  @media ${({ theme }) => theme.mediaQueries.phone} {\n    margin: 0;\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst MainTitle = styled.h1`\n  font-size: ${({ theme }) => theme.fontSizes.h1};\n  font-weight: ${({ theme }) => theme.fontWeights.light};\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.accent};\n  letter-spacing: 2px;\n  grid-column: 1 / -1;\n`;\n\nexport default CurrentWeather;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { slideUpIn } from \"../common\";\n\nconst PreviousDay = ({\n  isShow,\n  animationDelay,\n  onMoreInfoClick,\n  sol: {\n    date,\n    solNum,\n    temperature: { metricHigh, imperialHigh, metricLow, imperialLow },\n  },\n  isMetric,\n}) => {\n  let high = isMetric ? `${metricHigh}°C` : `${imperialHigh}°F`;\n  let low = isMetric ? `${metricLow}°C` : `${imperialLow}°F`;\n\n  return (\n    <Day isShow={isShow} animationDelay={animationDelay}>\n      <Sol> Sol {solNum}</Sol>\n      <Date>{date}</Date>\n      <Temperature>High: {high}</Temperature>\n      <Temperature>Low: {low}</Temperature>\n      <Info onClick={() => onMoreInfoClick(solNum)}>more info</Info>\n    </Day>\n  );\n};\n\nconst Day = styled.div`\n  opacity: 0;\n  ${({ isShow }) =>\n    isShow &&\n    css`\n      animation: ${slideUpIn} 750ms forwards;\n    `};\n  animation-delay: ${({ animationDelay }) => `${animationDelay}ms`};\n\n  & > * {\n    margin: 0;\n  }\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    width: 33%;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Sol = styled.h3``;\n\nconst Date = styled.p`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.gray};\n`;\n\nconst Temperature = styled.p``;\n\nconst Info = styled.button`\n  cursor: pointer;\n  border: 0;\n  border-radius: 100vmax;\n  background: ${({ theme }) => theme.colors.dark};\n  color: ${({ theme }) => theme.colors.light};\n  text-transform: uppercase;\n  padding: 0.3em 1em;\n  margin-top: 1em;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.gray};\n  }\n`;\n\nexport default PreviousDay;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ScreenReaders } from \"../common\";\n\nconst Button = ({ onClick, isShow }) => (\n  <StylledButton htmlFor=\"weather-toggle\" onClick={onClick} isShow={isShow}>\n    <span>&#8593;</span>\n    <ScreenReaders>Show previous weather</ScreenReaders>\n  </StylledButton>\n);\n\nconst StylledButton = styled.button`\n  position: absolute;\n  background: ${({ theme }) => theme.colors.light};\n  left: 50%;\n  width: 10rem;\n  transform: translate(-50%, calc(-100% - 3rem));\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  line-height: 1;\n  clip-path: polygon(50% 0, 0 100%, 100% 100%);\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.gray};\n  border: 0;\n  font-family: inherit;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.dark};\n  }\n\n  & span {\n    display: block;\n    transform: rotate(0);\n    transition: transform 300ms ease;\n\n    ${({ isShow }) => isShow && \"transform: rotate(180deg) translateY(-6px);\"}\n  }\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    transform: translate(-50%, calc(-100% - 2rem));\n  }\n`;\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { slideUpIn } from \"../common\";\nimport PreviousDay from \"./PreviousDay\";\nimport ButtonShow from \"./ButtonShow\";\n\nconst PreviousWeather = ({ sols, ...props }) => {\n  let [isShow, setIsShow] = useState(false);\n  let animationDelay = 75;\n\n  return (\n    <Container isShow={isShow}>\n      <ButtonShow isShow={isShow} onClick={() => setIsShow((show) => !show)} />\n\n      <Title isShow={isShow}>Previous 7 days</Title>\n\n      <PreviousDaysContainer>\n        {sols.map((sol) => (\n          <PreviousDay\n            key={sol.solNum}\n            sol={sol}\n            isShow={isShow}\n            animationDelay={(animationDelay += 25)}\n            {...props}\n          />\n        ))}\n      </PreviousDaysContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.colors.light};\n  color: ${({ theme }) => theme.colors.dark};\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  transform: ${({ isShow }) => (isShow ? \"translateY(0)\" : \"translateY(60%)\")};\n  transition: transform 350ms ease;\n  padding: 3rem;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    padding: 2rem;\n    transform: ${({ isShow }) =>\n      isShow ? \"translateY(0)\" : \"translateY(100%)\"};\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: ${({ theme }) => theme.fontSizes.h1};\n  font-weight: ${({ theme }) => theme.fontWeights.light};\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.accent};\n  letter-spacing: 2px;\n  text-align: center;\n\n  ${({ isShow }) =>\n    isShow &&\n    css`\n      animation: ${slideUpIn} 750ms forwards;\n      text-align: left;\n    `}\n`;\n\nconst PreviousDaysContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media ${({ theme }) => theme.mediaQueries.tablet} {\n    flex-flow: wrap;\n  }\n`;\n\nexport default PreviousWeather;\n","import { createGlobalStyle } from \"styled-components\";\nimport marsImg from \"../assets/mars.jpg\";\n\nconst GlobalStyle = createGlobalStyle`\n*,\n*::before,\n*::after {\n\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.6;\n  background-image: url(${marsImg});\n  background-size: cover;\n  height: 100vh;\n  overflow: hidden;\n  color: ${({ theme }) => theme.colors.light};\n}\n\nh1, h2, h3 {\n  line-height: 1;\n}\n\na {\n  color: ${({ theme }) => theme.colors.accent};\n}\n\na:hover {\n  color: ${({ theme }) => theme.colors.accentDark};\n}\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  fontWeights: {\n    light: 300,\n    normal: 400,\n    semi: 500,\n    bold: 700,\n  },\n  fontSizes: {\n    h1: \"1.5rem\",\n    h2: \"2.25rem\",\n    body: \"1rem\",\n    xl: \"4.5rem\",\n  },\n  colors: {\n    light: \"#fff\",\n    gray: \"#989898\",\n    dark: \"#444\",\n    accent: \"#D06D6D\",\n    accentDark: \"#613131\",\n  },\n  mediaQueries: {\n    tablet: \"only screen and (max-width: 768px)\",\n    phone: \"only screen and (max-width: 425px)\",\n  },\n};\n\nconst Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default Theme;\n","export const createSols = (data) =>\n  data.sol_keys.map((key) => ({\n    solNum: key,\n    date: formatDate(data[key].First_UTC),\n    temperature: {\n      metricHigh: Math.round(+!!data[key].AT && data[key].AT.mx),\n      metricLow: Math.round(+!!data[key].AT && data[key].AT.mn),\n      imperialHigh: cToF(+!!data[key].AT && data[key].AT.mx),\n      imperialLow: cToF(+!!data[key].AT && data[key].AT.mn),\n    },\n    wind: {\n      metricSpeed: mPerSToKmPerH(+!!data[key].HWS && data[key].HWS.av),\n      imperialSpeed: mPerSToMilesPerH(+!!data[key].HWS && data[key].HWS.av),\n      compassDegrees: Math.round(\n        +!!data[key].WD && data[key].WD.most_common.compass_degrees\n      ),\n    },\n  }));\n\nconst cToF = (c = 0) => Math.round((c * 9) / 5 + 32);\n\nconst mPerSToKmPerH = (mPerS = 0) => Math.round(mPerS * 3.6);\nconst mPerSToMilesPerH = (mPerS = 0) => Math.round(mPerS * 3.6 * 0.61);\n\nconst formatDate = (firstDate) => {\n  let date = new Date(firstDate);\n  return new Intl.DateTimeFormat(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n  }).format(date);\n};\n","import { useEffect, useState } from \"react\";\nimport { createSols } from \"./createSols\";\n\nconst URL =\n  \"https://api.nasa.gov/insight_weather/?api_key=DEMO_KEY&feedtype=json&ver=1.0\";\n\nexport function useNasaApi(setCurrentSol) {\n  let [sols, setSols] = useState(null);\n  let [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(URL)\n      .then((response) => response.json())\n      .then((data) => {\n        let _sols = createSols(data);\n        setSols(_sols);\n        setCurrentSol(_sols[_sols.length - 1]);\n        setIsLoading(false);\n      });\n  }, [setCurrentSol]);\n\n  return { isLoading, sols };\n}\n","import React, { useState } from \"react\";\nimport { LoadingSpinner } from \"./components/common\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport PreviousWeather from \"./components/PreviousWeather\";\nimport { Theme, GlobalStyle } from \"./style\";\nimport { useNasaApi } from \"./useNasaApi\";\n\nconst App = () => {\n  let [currentSol, setCurrentSol] = useState(null);\n  let { isLoading, sols } = useNasaApi(setCurrentSol);\n  let [isMetric, setIsMetric] = useState(true);\n\n  const onUnitClick = () => setIsMetric((isMetric) => !isMetric);\n  const onMoreInfoClick = (solNum) => {\n    let targetSol = sols.filter((s) => s.solNum === solNum)[0];\n    setCurrentSol(targetSol);\n  };\n\n  return (\n    <Theme>\n      <GlobalStyle />\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          <CurrentWeather\n            isMetric={isMetric}\n            onUnitClick={onUnitClick}\n            currentSol={currentSol}\n          />\n          <PreviousWeather\n            isMetric={isMetric}\n            onMoreInfoClick={onMoreInfoClick}\n            sols={sols}\n          />\n        </>\n      )}\n    </Theme>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}